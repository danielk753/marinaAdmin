{"version":3,"sources":["src/app/own/data-table/data-table.component.html","src/app/own/data-table/data-table.component.scss","src/app/own/data-table/data-table.component.ts","src/app/own/data-table/data-table.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,s1NAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,syNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,kBAAkB,GAA/B,MAAa,kBAAb,CAA+B;AA2C7B,MAAA,WAAA,CAAoB,aAApB,EAAkD;AAA9B,aAAA,aAAA,GAAA,aAAA;AAzCb,aAAA,KAAA,GAAyF;AAC9F,UAAA,UAAU,EAAE,CADkF;AAE9F,UAAA,QAAQ,EAAE,EAFoF;AAG9F,UAAA,QAAQ,EAAE,CAHoF;AAI9F,UAAA,SAAS,EAAE;AAJmF,SAAzF;AASA,aAAA,iBAAA,GAA2B,EAA3B;AAYG,aAAA,MAAA,GAA4B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA5B;AACA,aAAA,MAAA,GAA4B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA5B;AACA,aAAA,MAAA,GAA4B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA5B;AACA,aAAA,OAAA,GAA6B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA7B;AACA,aAAA,WAAA,GAAiC,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAjC;AACA,aAAA,WAAA,GAAiC,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAjC;AAEH,aAAA,QAAA,GAAW,KAAX;AACA,aAAA,OAAA,GAAU,EAAV;AACA,aAAA,QAAA,GAAW,EAAX;AAEA,aAAA,YAAA,GAAiD;AAAC,UAAA,MAAM,EAAE,EAAT;AAAa,UAAA,IAAI,EAAE;AAAnB,SAAjD;AACA,aAAA,aAAA,GAAoB,EAApB;AAEA,aAAA,WAAA,GAAc,CAAd;AAEA,aAAA,OAAA,GAAU,KAAV;AACA,aAAA,KAAA,GAAQ,EAAR;AACA,aAAA,YAAA,GAAe,kBAAf;AAIN;;AA/BD,UAAI,cAAJ,CAAmB,SAAnB,EAAmC;AACjC,aAAK,SAAL,GAAiB,SAAjB;;AACA,YAAI,SAAJ,EAAe;AACb,eAAK,UAAL,GAAkB,SAAlB;AACA,eAAK,QAAL;AACA,eAAK,KAAL,CAAW,SAAX,GAAuB,KAAK,UAAL,CAAgB,MAAvC;AACD;AACF;;AA0BD,MAAA,QAAQ,GAAA;AACN,aAAK,iBAAL,CAAuB,IAAvB,CAA4B,EAA5B;AACD;;AAEM,MAAA,QAAQ,CAAC,WAAD,EAAY;AACzB,aAAK,aAAL,CAAmB,IAAnB;AACA,aAAK,KAAL,CAAW,SAAX;AACA,aAAK,iBAAL,CAAuB,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,GAA6B,CAApD,EAAuD,IAAvD,CAA4D,WAA5D;AACA,aAAK,OAAL,CAAa,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,GAA6B,CAA1C,EAJyB,CAKzB;;AACA,aAAK,UAAL,CAAgB,IAAhB,CAAqB,WAArB;AACA,aAAK,QAAL,GAAgB,KAAhB;AACA,aAAK,OAAL,GAAe,EAAf,CARyB,CASzB;AACD;;AAEM,MAAA,OAAO,CAAC,CAAD,EAAU;AACtB,YAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,eAAK,QAAL,CAAc,CAAd,IAAmB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,KAAK,SAAL,CAAe,KAAK,aAAL,CAAmB,CAAnB,CAAf,CAAf,CAAX,CAAnB;AACD,SAFD,MAEO;AACL,eAAK,WAAL,CAAiB,IAAjB,CAAsB,CAAtB;AACD,SALqB,CAMtB;AACA;;AACD;;AAEM,MAAA,UAAU,CAAC,WAAD,EAAY;AAC3B,cAAM,KAAK,GAAG,KAAK,aAAL,CAAmB,WAAW,CAAC,EAA/B,CAAd;AACA,aAAK,QAAL,CAAc,WAAW,CAAC,EAA1B,IAAgC,SAAhC;AACA,aAAK,SAAL,CAAe,KAAf,IAAwB,WAAxB;AACA,aAAK,UAAL,CAAgB,KAAK,cAAL,CAAoB,WAAW,CAAC,EAAhC,CAAhB,IAAuD,WAAvD;AACA,aAAK,KAAL,CAAW,SAAX;AACD;;AAED,MAAA,UAAU,CAAC,WAAD,EAAY;AACpB,aAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,aAAL,CAAmB,WAAW,CAAC,EAA/B,CAAtB,EAA0D,CAA1D;AACA,aAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAK,cAAL,CAAoB,WAAW,CAAC,EAAhC,CAAvB,EAA4D,CAA5D;AACA,aAAK,QAAL,CAAc,WAAW,CAAC,EAA1B,IAAgC,SAAhC;AACA,aAAK,aAAL,CAAmB,KAAnB;AACA,aAAK,KAAL,CAAW,SAAX;AACD;;AAED,MAAA,UAAU,CAAC,MAAM,GAAG,IAAV,EAAgB,SAAS,GAAG,KAA5B,EAAiC;AACzC,YAAI,CAAC,SAAL,EAAgB;AACd,eAAK,YAAL,CAAkB,MAAlB,GAA2B,MAAM,CAAC,IAAlC;AACA,eAAK,YAAL,CAAkB,IAAlB,GAAyB,KAAK,YAAL,CAAkB,IAAlB,KAA2B,UAA3B,GAAwC,YAAxC,GAAuD,UAAhF;AACD;;AACD,cAAM,eAAe,GAAG,KAAK,YAAL,CAAkB,IAAlB,KAA2B,UAA3B,GAAwC,CAAC,CAAzC,GAA6C,CAArE;AAEA,aAAK,iBAAL,CAAuB,OAAvB,CAA+B,CAAC,SAAD,EAAY,KAAZ,KAAqB;AAClD,cAAI,KAAK,KAAK,KAAK,KAAL,CAAW,QAAzB,EAAmC;AACjC,iBAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,MAAf,CAAsB,SAAtB,CAAjB;AACD;AACF,SAJD;AAKA,aAAK,SAAL,CAAe,IAAf,CAAoB,CAAC,CAAD,EAAI,CAAJ,KAAS;AAC3B,cAAI,KAAK,CAAC,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAF,CAAT,EAAwC;AACtC,gBAAI,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAD,CAA4B,WAA5B,KAA4C,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAD,CAA4B,WAA5B,EAAhD,EAA2F;AACzF,qBAAO,CAAC,CAAD,GAAK,eAAZ;AACD;;AACD,gBAAI,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAD,CAA4B,WAA5B,KAA4C,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAD,CAA4B,WAA5B,EAAhD,EAA2F;AACzF,qBAAO,eAAP;AACD,aANqC,CAOtC;;;AACA,mBAAO,CAAP;AACD,WATD,MASO;AACL,gBAAI,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAD,GAA8B,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAnC,EAA+D;AAC7D,qBAAO,CAAC,CAAD,GAAK,eAAZ;AACD;;AACD,gBAAI,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAD,GAA8B,CAAC,CAAC,KAAK,YAAL,CAAkB,MAAnB,CAAnC,EAA+D;AAC7D,qBAAO,eAAP;AACD,aANI,CAOL;;;AACA,mBAAO,CAAP;AACD;AACF,SApBD;AAqBA,aAAK,QAAL;AACD;;AAED,MAAA,YAAY,CAAC,MAAD,EAAS,KAAT,EAAc;AACxB,QAAA,KAAK,KAAK,EAAV,GAAe,OAAO,KAAK,aAAL,CAAmB,MAAM,CAAC,IAA1B,CAAtB,GAAwD,KAAK,aAAL,CAAmB,MAAM,CAAC,IAA1B,IAAkC,KAA1F;;AACA,YAAI,MAAM,CAAC,IAAP,CAAY,KAAK,aAAjB,EAAgC,MAApC,EAA4C;AAC1C,cAAI,KAAK,GAAG,CAAZ;;AACA,eAAK,MAAM,GAAX,IAAkB,KAAK,aAAvB,EAAsC;AACpC,gBAAI,KAAK,aAAL,CAAmB,GAAnB,MAA4B,EAAhC,EAAoC;AAClC,kBAAI,KAAK,KAAK,CAAd,EAAiB;AACf,qBAAK,SAAL,GAAiB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAD,CAAJ,GAAY,EAAb,EAAiB,QAAjB,CAA0B,KAAK,aAAL,CAAmB,GAAnB,CAA1B,CAA/B,CAAjB;AACD,eAFD,MAEO;AACL,qBAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,MAAf,CAAsB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAD,CAAJ,GAAY,EAAb,EAAiB,QAAjB,CAA0B,KAAK,aAAL,CAAmB,GAAnB,CAA1B,CAA9B,CAAjB;AACD;;AACD,cAAA,KAAK;AACN;AACF;AACF,SAZD,MAYO;AACL,eAAK,SAAL,GAAiB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,IAAI,IAAI,IAA/B,CAAjB;AACD;;AACD,YAAI,KAAK,YAAL,CAAkB,MAAtB,EAA8B;AAC5B,eAAK,UAAL,CAAgB,IAAhB,EAAsB,IAAtB;AACD;;AACD,aAAK,KAAL,CAAW,QAAX,GAAsB,CAAtB;AACA,aAAK,QAAL;AACD;;AAED,MAAA,cAAc,CAAC,EAAD,EAAW;AACvB,eAAO,KAAK,UAAL,CAAgB,SAAhB,CAA0B,IAAI,IAAI,IAAI,CAAC,EAAL,KAAY,EAA9C,CAAP;AACD;;AAED,MAAA,aAAa,CAAC,EAAD,EAAW;AACtB,eAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,IAAI,IAAI,IAAI,CAAC,EAAL,KAAY,EAA7C,CAAP;AACD;;AAEM,MAAA,QAAQ,CAAC,aAAa,GAAG,KAAjB,EAAsB;AACnC,YAAI,KAAK,KAAL,CAAW,UAAX,IAAyB,CAAzB,IAA8B,KAAK,KAAL,CAAW,UAA7C,EAAyD;AACvD,cAAI,aAAJ,EAAmB;AACjB,iBAAK,iBAAL,CAAuB,OAAvB,CAA+B,CAAC,SAAD,EAAY,KAAZ,KAAqB;AAClD,kBAAI,KAAK,KAAK,KAAK,KAAL,CAAW,QAAzB,EAAmC;AACjC,qBAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,MAAf,CAAsB,SAAtB,CAAjB;AACD;AACF,aAJD;AAKD;;AACD,eAAK,iBAAL,GAAyB,EAAzB;;AACA,cAAI,KAAK,KAAL,CAAW,UAAf,EAA2B;AACzB,iBAAK,KAAL,CAAW,QAAX,GAAsB,EAAtB;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,KAAK,SAAL,CAAe,MAAf,GAAwB,KAAK,KAAL,CAAW,UAA7C,CAApB,EAA8E,CAAC,EAA/E,EAAmF;AACjF,mBAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,CAAzB;AACD;;AACD,iBAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,CAAC,IAAG;AAC9B,kBAAI,CAAC,KAAK,CAAV,EAAa;AACX,qBAAK,iBAAL,CAAuB,IAAvB,CAA4B,KAAK,SAAL,CAAe,KAAf,CAAqB,CAArB,EAAwB,KAAK,KAAL,CAAW,UAAnC,CAA5B;AACD,eAFD,MAEO;AACL,qBAAK,iBAAL,CAAuB,IAAvB,CAA4B,KAAK,SAAL,CAAe,KAAf,CAAqB,CAAC,GAAG,KAAK,KAAL,CAAW,UAApC,EAAgD,CAAC,IAAI,CAAL,IAAU,KAAK,KAAL,CAAW,UAArE,CAA5B;AACD;AACF,aAND;AAOA,iBAAK,OAAL;AACD;AACF;AACF;;AAEM,MAAA,OAAO,CAAC,IAAI,GAAG,CAAR,EAAS;AAErB,aAAK,KAAL,CAAW,QAAX,GAAsB,IAAtB;AACA,aAAK,SAAL,GAAiB,KAAK,iBAAL,CAAuB,IAAvB,CAAjB;AACD;;AAEM,MAAA,aAAa,CAAC,IAAD,EAAc;AAChC,YAAI,QAAQ,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,GAA6B,CAA5C;;AACA,YAAI,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnB,eAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,CAAzB;AACA,eAAK,iBAAL,CAAuB,IAAvB,CAA4B,EAA5B;AACA,UAAA,QAAQ,GAAG,CAAX;AACD;;AACD,YAAI,IAAJ,EAAU;AACR,cAAI,KAAK,iBAAL,CAAuB,QAAvB,EAAiC,MAAjC,KAA4C,KAAK,KAAL,CAAW,UAA3D,EAAuE;AACrE,iBAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,QAAQ,GAAG,CAApC;AACA,iBAAK,iBAAL,CAAuB,IAAvB,CAA4B,EAA5B;AACD;AACF,SALD,MAKO;AACL,cAAI,CAAC,KAAK,iBAAL,CAAuB,QAAvB,EAAiC,MAAtC,EAA8C;AAC5C,iBAAK,KAAL,CAAW,QAAX,CAAoB,GAApB;AACA,iBAAK,iBAAL,CAAuB,GAAvB;AACA,iBAAK,OAAL,CAAa,QAAQ,GAAG,CAAxB;AACD;AACF;AACF;;AAEM,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAwB,CAAxB,EAAkC;AACrD,cAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;AACA,cAAM,CAAC,IAAD,IAAS,KAAK,CAAC,MAAN,CAAa,KAA5B;AACA,QAAA,MAAM,CAAC,aAAP,CAAqB,IAArB;;AACA,QAAA,MAAM,CAAC,MAAP,GAAgB,MAAK;AACnB,cAAI,CAAJ,EAAO;AACL,iBAAK,QAAL,CAAc,CAAd,EAAiB,MAAjB,IAA2B,MAAM,CAAC,MAAlC;AAED,WAHD,MAGO;AACL,iBAAK,OAAL,CAAa,MAAb,IAAuB,MAAM,CAAC,MAA9B;AAED;AACF,SARD;AASD;;AAEM,MAAA,YAAY,CAAC,QAAD,EAAmB,IAAnB,EAA+B;AAChD,aAAK,aAAL,CAAmB,IAAnB,CAAwB,gEAAA,CAAA,iBAAA,CAAxB,EAAyC;AACvC,UAAA,OAAO,EAAE;AACP,YAAA,KAAK,EAAE,IADA;AAEP,YAAA,OAAO,EAAE,IAFF;AAGP,YAAA,OAAO,EAAE;AAHF;AAD8B,SAAzC;AAOD;;AAEM,MAAA,SAAS,CAAC,UAAD,EAAW;AACzB,eAAO,KAAK,YAAL,CAAkB,QAAlB,CAA2B,UAA3B,CAAP;AACD;;AAEM,MAAA,QAAQ,GAAA;AACb,YAAI,CAAC,KAAK,OAAV,EAAmB;AACjB,eAAK,OAAL,CAAa,IAAb;AACD;AACF;;AApP4B,KAA/B;;;YA2CqC,2CAAA,CAAA,iBAAA;;;AAnC1B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,4BAAA,E,gBAAA,E,KAA+B,CAA/B;AAMT,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EACD,CAAA,E,4BAAA,E,gBAAA,EAOC,IAPD;AASU,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,4BAAA,E,QAAA,E,KAA+C,CAA/C;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,4BAAA,E,QAAA,E,KAA+C,CAA/C;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,4BAAA,E,QAAA,E,KAA+C,CAA/C;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,4BAAA,E,SAAA,E,KAAgD,CAAhD;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,4BAAA,E,aAAA,E,KAAoD,CAApD;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,4BAAA,E,aAAA,E,KAAyD,CAAzD;AA5BC,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwBb,QAAa,eAAe,GAA5B,MAAa,eAAb,CAA4B,EAA5B;AAAa,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAhB3B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,kDAAA,CAAA,oBAAA,CAAD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,cAAA,CAFO,EAGP,2CAAA,CAAA,cAAA,CAHO,EAIP,2CAAA,CAAA,aAAA,CAJO,EAKP,2CAAA,CAAA,eAAA,CALO,EAMP,2CAAA,CAAA,gBAAA,CANO,EAOP,2CAAA,CAAA,iBAAA,CAPO,EAQP,2CAAA,CAAA,eAAA,CARO,EASP,2CAAA,CAAA,gBAAA,CATO,EAUP,2CAAA,CAAA,gBAAA,CAVO,CAFD;AAcR,MAAA,OAAO,EAAC,CAAC,kDAAA,CAAA,oBAAA,CAAD;AAdA,KAAT,CAgB2B,CAAA,EAAf,eAAe,CAAf","sourcesContent":["export default \"<div class=\\\"container-table\\\">\\n  <div class=\\\"linePreloader\\\" *ngIf=\\\"charginData\\\"></div>\\n\\n  <table>\\n    <thead>\\n    <!-- Se muestra los nombres que tendrÃ¡n las columnas -->\\n    <tr>\\n      <th style=\\\"width: 6%;\\\"></th>\\n      <th *ngFor=\\\"let column of tableStructure.columns\\\" (click)=\\\"sortColumn(column)\\\">\\n        {{column.title}}\\n        <nb-icon class=\\\"sort\\\"\\n                 [icon]=\\\"columnSorted.mode\\\"\\n                 *ngIf=\\\"columnSorted.column==column.name\\\"></nb-icon>\\n      </th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <!-- Se agrega el bot'on de crear -->\\n    <tr>\\n      <td>\\n        <!--   <button nbButton *ngIf=\\\"tableStructure.buttons.create \\\" desaparece bot'on      -->\\n        <button nbButton\\n                style=\\\"padding:.5rem 2.5rem ;\\\"\\n                (click)=\\\"onCreate=true;createClick.emit()\\\">\\n          <nb-icon icon=\\\"plus-outline\\\"></nb-icon>\\n        </button>\\n      </td>\\n      <!-- crea campos de filtrado -->\\n      <td *ngFor=\\\"let column of tableStructure.columns\\\">\\n        <input *ngIf=\\\"column.filter\\\"\\n               #valueFilter (keyup)=\\\"filterColumn(column,valueFilter.value)\\\"\\n               [type]=\\\"column.type == 'number'? 'number': 'text' \\\"\\n               [placeholder]=\\\"column.title\\\"\\n               nbInput fullWidth>\\n      </td>\\n    </tr>\\n    <!-- Fila para crear el registros -->\\n    <tr *ngIf=\\\"onCreate && tableStructure.buttons.create\\\">\\n      <td>\\n        <!-- Bot'on de editar       -->\\n        <nb-icon icon=\\\"save-outline\\\" status=\\\"success\\\" (click)=\\\"create.emit(newData)\\\"></nb-icon>\\n        <!-- Bot'on de cancelar -->\\n        <nb-icon icon=\\\"close-outline\\\" status=\\\"danger\\\" (click)=\\\"onCreate=false\\\"></nb-icon>\\n      </td>\\n      <!-- Crea campos de crear  -->\\n      <td *ngFor=\\\"let column of tableStructure.columns\\\">\\n        <div *ngIf=\\\"column.editable\\\">\\n          <!--   Campo generic      -->\\n          <input class=\\\"input-edit\\\" status=\\\"primary\\\" nbInput\\n                 *ngIf=\\\"isGeneric(column.type)\\\"\\n                 [type]=\\\"column.type\\\" [placeholder]=\\\"column.title\\\"\\n                 [(ngModel)]=\\\"newData[column.name]\\\">\\n          <!-- Campo file      -->\\n          <input class=\\\"input-edit\\\" status=\\\"primary\\\" nbInput\\n                 *ngIf=\\\"column.type=='file' \\\"\\n                 [type]=\\\"column.type\\\" [placeholder]=\\\"column.title\\\"\\n                 (change)=\\\"setImageChange($event,column.name)\\\">\\n          <!--     Campo textarea     -->\\n          <textarea class=\\\"input-edit\\\" status=\\\"primary\\\" rows=\\\"5\\\" nbInput\\n                    *ngIf=\\\"column.type=='textarea'\\\"\\n                    [placeholder]=\\\"column.title\\\"\\n                    [(ngModel)]=\\\"newData[column.name]\\\"></textarea>\\n        </div>\\n        <img *ngIf=\\\"newData[column.name] && column.type=='file'\\\"\\n             [src]=\\\"newData[column.name]\\\">\\n      </td>\\n    </tr>\\n\\n    <!-- fila para mostrar y update-->\\n    <tr *ngFor=\\\"let data of dataArray\\\">\\n\\n      <!-- Botones para editar -->\\n      <td *ngIf=\\\"!inUpdate[data.id]\\\">\\n        <nb-icon icon=\\\"edit-outline\\\" status=\\\"primary\\\" (click)=\\\"putEdit(data.id); getLists(); \\\"></nb-icon>\\n        <nb-icon icon=\\\"trash-2-outline\\\" status=\\\"danger\\\" (click)=\\\"delete.emit(data)\\\"></nb-icon>\\n      </td>\\n\\n      <!--Botones en modo EdiciÃ³n-->\\n      <td *ngIf=\\\"inUpdate[data.id]\\\">\\n        <nb-icon icon=\\\"checkmark-outline\\\" status=\\\"success\\\" (click)=\\\"update.emit(inUpdate[data.id])\\\">\\n        </nb-icon>\\n        <nb-icon icon=\\\"close-outline\\\" status=\\\"danger\\\" (click)=\\\"inUpdate[data.id]=undefined\\\"></nb-icon>\\n      </td>\\n\\n      <!--Muestra datos -->\\n      <td *ngFor=\\\"let column of tableStructure.columns\\\">\\n        <!--  Simple texto      -->\\n        <span *ngIf=\\\"(!inUpdate[data.id]||!column.editable)&&(isGeneric(column.type)||column.type=='textarea')\\\">\\n              {{data[column.name]}}</span>\\n        <span *ngIf=\\\"(!inUpdate[data.id]||!column.editable)&&column.type=='list'\\\">\\n              {{data[column.name]['nombre']}}</span>\\n\\n        <nb-toggle *ngIf=\\\"(!inUpdate[data.id]||!column.editable)&&column.type=='toggle'\\\"\\n                   disabled [checked]=\\\"data[column.name]\\\"></nb-toggle>\\n\\n        <!--  Imagen si es que se cambia      -->\\n        <img *ngIf=\\\"column.type=='file' &&  !inUpdate[data.id] && data[column.name]\\\"\\n             (click)=\\\"onClickImage(data[column.name],column.name)\\\"\\n             [src]=\\\"data[column.name]\\\">\\n\\n\\n        <!-- Inputs en ediciÃ³n-->\\n        <div *ngIf=\\\"inUpdate[data.id] && column.editable\\\">\\n          <!--     Input genetico     -->\\n          <input class=\\\"input-edit\\\" status=\\\"primary\\\" nbInput\\n                 *ngIf=\\\"isGeneric(column.type)\\\"\\n                 [type]=\\\"column.type\\\" [placeholder]=\\\"column.title\\\"\\n                 [(ngModel)]=\\\"inUpdate[data.id][column.name]\\\">\\n          <!--     Input file     -->\\n          <input class=\\\"input-edit\\\" status=\\\"primary\\\" nbInput\\n                 *ngIf=\\\"column.type=='file' \\\"\\n                 [type]=\\\"column.type\\\" [placeholder]=\\\"column.title\\\"\\n                 (change)=\\\"setImageChange($event,column.name,data.id)\\\">\\n\\n          <nb-select *ngIf=\\\"column.type=='list'\\\" status=\\\"primary\\\"\\n                     [(selected)]=\\\"inUpdate[data.id][column.name]['id']\\\">\\n\\n            <nb-option *ngFor=\\\"let name of (lists[column.name] |async);\\\"\\n                       [value]=\\\"name.id\\\">{{name.nombre}}</nb-option>\\n          </nb-select>\\n\\n          <nb-toggle *ngIf=\\\"column.type=='toggle'\\\" status=\\\"primary\\\"\\n                     [(checked)]=\\\"inUpdate[data.id][column.name]\\\"></nb-toggle>\\n\\n          <textarea class=\\\"input-edit\\\" status=\\\"primary\\\" rows=\\\"5\\\" nbInput\\n                    *ngIf=\\\"column.type=='textarea'\\\"\\n                    [placeholder]=\\\"column.title\\\"\\n                    [(ngModel)]=\\\"inUpdate[data.id][column.name]\\\"></textarea>\\n\\n          <img *ngIf=\\\"inUpdate[data.id][column.name] && column.type=='file'\\\" [src]=\\\"inUpdate[data.id][column.name]\\\">\\n\\n        </div>\\n        <nb-icon icon=\\\"eye\\\" status=\\\"info\\\" *ngIf=\\\"column.type=='button'\\\" class=\\\"w-100\\\"\\n                 (click)=\\\"buttonClick.emit(data.id)\\\"></nb-icon>\\n\\n      </td>\\n    </tr>\\n\\n    <tr>\\n      <td *ngIf=\\\"!dataArray\\\" [colSpan]=\\\"tableStructure.columns.length+1\\\">\\n        <p style=\\\"padding-left: 1rem;\\\">Sin datos</p>\\n      </td>\\n    </tr>\\n\\n    </tbody>\\n  </table>\\n\\n</div>\\n<nb-actions size=\\\"small\\\" style=\\\"margin:20px 0\\\">\\n  <nb-action>Filas por pagina</nb-action>\\n  <nb-action><input type=\\\"number\\\" nbInput [(ngModel)]=\\\"pages.rowPerPage\\\" fieldSize=\\\"tiny\\\" style=\\\"width: 6rem;\\\"\\n                    (keyup)=\\\"paginate(true)\\\"></nb-action>\\n  <nb-action *ngFor=\\\"let page of pages.numPages\\\" (click)=\\\"setPage(page)\\\"\\n             [ngClass]=\\\"pages.selected==page? 'selected':''\\\">{{1 + page}}</nb-action>\\n  <nb-action>Total {{pages.totalRows}} registros</nb-action>\\n</nb-actions>\\n\"","export default \"table {\\n  width: 100%;\\n  border-collapse: collapse;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n\\ntable, th, td {\\n  border: 1px solid rgba(192, 192, 192, 0.315);\\n}\\n\\ntd, th {\\n  font-weight: normal;\\n  padding: 1rem;\\n  min-width: 150px;\\n}\\n\\n.container-table {\\n  overflow-x: auto;\\n}\\n\\nnb-icon {\\n  width: 50%;\\n  height: 25px;\\n}\\n\\nbutton {\\n  padding: 3px 25px;\\n}\\n\\ntr:nth-child(even) {\\n  background-color: #f7f9fc;\\n}\\n\\ntr:hover {\\n  background-color: #cdd9eb;\\n}\\n\\n.tr-input {\\n  background-color: #cdd9eb;\\n}\\n\\nnb-icon:hover, th:hover {\\n  cursor: pointer;\\n}\\n\\n.sort {\\n  width: 15px;\\n}\\n\\nnb-action:hover {\\n  cursor: pointer;\\n}\\n\\n.selected {\\n  border-bottom: 2px solid #3366ff;\\n}\\n\\n.input-edit {\\n  width: 230px;\\n}\\n\\ntextarea {\\n  resize: none;\\n}\\n\\nimg {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 100px;\\n  height: 100px;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\n.linePreloader {\\n  width: 100%;\\n  height: 3px;\\n  background: -webkit-gradient(linear, left top, right top, from(blue), to(#242483));\\n  background: linear-gradient(to right, blue, #242483);\\n  background-color: #ccc;\\n  margin: auto;\\n  border-radius: 4px;\\n  background-size: 20%;\\n  background-repeat: repeat-y;\\n  background-position: -25% 0;\\n  -webkit-animation: scroll 1.2s ease-in-out infinite;\\n          animation: scroll 1.2s ease-in-out infinite;\\n}\\n\\n@-webkit-keyframes scroll {\\n  50% {\\n    background-size: 80%;\\n  }\\n  100% {\\n    background-position: 125% 0;\\n  }\\n}\\n\\n@keyframes scroll {\\n  50% {\\n    background-size: 80%;\\n  }\\n  100% {\\n    background-position: 125% 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3duL2RhdGEtdGFibGUvQzpcXGxhcmFnb25cXHd3d1xcVmlkYU1hcmluYUFkbWluL3NyY1xcYXBwXFxvd25cXGRhdGEtdGFibGVcXGRhdGEtdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL293bi9kYXRhLXRhYmxlL2RhdGEtdGFibGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxXQUFBO0VBQ0EseUJBQUE7RUFDQSx5QkFBQTtVQUFBLDhCQUFBO0FDQUY7O0FER0E7RUFDRSw0Q0FBQTtBQ0FGOztBREdBO0VBQ0UsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0FDQUY7O0FER0E7RUFDRSxVQUFBO0VBQ0EsWUFBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7QUNBRjs7QURHQTtFQUNFLHlCQUFBO0FDQUY7O0FER0E7RUFDRSx5QkFBQTtBQ0FGOztBREdBO0VBQ0UseUJBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7QUNBRjs7QURHQTtFQUNFLFdBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7QUNBRjs7QURHQTtFQUNFLGdDQUFBO0FDQUY7O0FER0E7RUFDRSxZQUFBO0FDQUY7O0FER0E7RUFDRSxZQUFBO0FDQUY7O0FER0E7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7S0FBQSxtQkFBQTtBQ0FGOztBREdBO0VBQ0UsV0FBQTtFQUNBLFdBQUE7RUFDQSxrRkFBQTtFQUFBLG9EQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtFQUNBLDJCQUFBO0VBQ0EsMkJBQUE7RUFDQSxtREFBQTtVQUFBLDJDQUFBO0FDQUY7O0FER0E7RUFDRTtJQUNFLG9CQUFBO0VDQUY7RURFQTtJQUNFLDJCQUFBO0VDQUY7QUFDRjs7QUROQTtFQUNFO0lBQ0Usb0JBQUE7RUNBRjtFREVBO0lBQ0UsMkJBQUE7RUNBRjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvb3duL2RhdGEtdGFibGUvZGF0YS10YWJsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbnRhYmxlLCB0aCwgdGQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTkyLCAxOTIsIDE5MiwgMC4zMTUpO1xyXG59XHJcblxyXG50ZCwgdGgge1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgcGFkZGluZzogMXJlbTtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG4uY29udGFpbmVyLXRhYmxlIHtcclxuICBvdmVyZmxvdy14OiBhdXRvO1xyXG59XHJcblxyXG5uYi1pY29uIHtcclxuICB3aWR0aDogNTAlO1xyXG4gIGhlaWdodDogMjVweDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBwYWRkaW5nOiAzcHggMjVweDtcclxufVxyXG5cclxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmOWZjO1xyXG59XHJcblxyXG50cjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NkZDllYjtcclxufVxyXG5cclxuLnRyLWlucHV0IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2RkOWViO1xyXG59XHJcblxyXG5uYi1pY29uOmhvdmVyLCB0aDpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc29ydCB7XHJcbiAgd2lkdGg6IDE1cHg7XHJcbn1cclxuXHJcbm5iLWFjdGlvbjpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc2VsZWN0ZWQge1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMzM2NmZmO1xyXG59XHJcblxyXG4uaW5wdXQtZWRpdCB7XHJcbiAgd2lkdGg6IDIzMHB4O1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgcmVzaXplOiBub25lO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgaGVpZ2h0OiAxMDBweDtcclxuICBvYmplY3QtZml0OiBjb250YWluO1xyXG59XHJcblxyXG4ubGluZVByZWxvYWRlciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzcHg7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBibHVlLCByZ2IoMzYsIDM2LCAxMzEpKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1zaXplOiAyMCU7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0yNSUgMDtcclxuICBhbmltYXRpb246IHNjcm9sbCAxLjJzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNjcm9sbCB7XHJcbiAgNTAlIHtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogODAlXHJcbiAgfVxyXG4gIDEwMCUge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTI1JSAwO1xyXG4gIH1cclxufVxyXG5cclxuIiwidGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG50YWJsZSwgdGgsIHRkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxOTIsIDE5MiwgMTkyLCAwLjMxNSk7XG59XG5cbnRkLCB0aCB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHBhZGRpbmc6IDFyZW07XG4gIG1pbi13aWR0aDogMTUwcHg7XG59XG5cbi5jb250YWluZXItdGFibGUge1xuICBvdmVyZmxvdy14OiBhdXRvO1xufVxuXG5uYi1pY29uIHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiAyNXB4O1xufVxuXG5idXR0b24ge1xuICBwYWRkaW5nOiAzcHggMjVweDtcbn1cblxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjlmYztcbn1cblxudHI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2RkOWViO1xufVxuXG4udHItaW5wdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2RkOWViO1xufVxuXG5uYi1pY29uOmhvdmVyLCB0aDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnNvcnQge1xuICB3aWR0aDogMTVweDtcbn1cblxubmItYWN0aW9uOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc2VsZWN0ZWQge1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzMzNjZmZjtcbn1cblxuLmlucHV0LWVkaXQge1xuICB3aWR0aDogMjMwcHg7XG59XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiBub25lO1xufVxuXG5pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDEwMHB4O1xuICBvYmplY3QtZml0OiBjb250YWluO1xufVxuXG4ubGluZVByZWxvYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDNweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBibHVlLCAjMjQyNDgzKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgbWFyZ2luOiBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJhY2tncm91bmQtc2l6ZTogMjAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0yNSUgMDtcbiAgYW5pbWF0aW9uOiBzY3JvbGwgMS4ycyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cblxuQGtleWZyYW1lcyBzY3JvbGwge1xuICA1MCUge1xuICAgIGJhY2tncm91bmQtc2l6ZTogODAlO1xuICB9XG4gIDEwMCUge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEyNSUgMDtcbiAgfVxufSJdfQ== */\"","import {Component, OnInit, Input, Output, EventEmitter,} from '@angular/core';\nimport {TableStructure} from './tableStructure';\nimport {NbDialogService} from '@nebular/theme';\nimport {DialogComponent} from 'src/app/own/dialog/dialog.component';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent implements OnInit {\n\n  public pages: { rowPerPage: number, numPages: number[], selected: number, totalRows: number } = {\n    rowPerPage: 5,\n    numPages: [],\n    selected: 0,\n    totalRows: 0\n  };\n  @Input() tableStructure: TableStructure;\n  public dataArray: any[];\n  public backUpData: any[];\n  public paginateDataArray: any[] = [];\n\n  @Input()\n  set dataArrayInput(dataArray: any[]) {\n    this.dataArray = dataArray;\n    if (dataArray) {\n      this.backUpData = dataArray;\n      this.paginate();\n      this.pages.totalRows = this.backUpData.length;\n    }\n  }\n\n  @Output() create: EventEmitter<any> = new EventEmitter();\n  @Output() update: EventEmitter<any> = new EventEmitter();\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @Output() getList: EventEmitter<any> = new EventEmitter();\n  @Output() createClick: EventEmitter<any> = new EventEmitter();\n  @Output() buttonClick: EventEmitter<any> = new EventEmitter<any>();\n\n  public onCreate = false;\n  public newData = {};\n  public inUpdate = [];\n\n  public columnSorted: { column: string, mode: string } = {column: '', mode: 'arrow-up'};\n  public columnsFilter: {} = {};\n\n  public charginData = 0;\n\n  public islists = false;\n  public lists = [];\n  public genericTypes = 'text,date,number';\n\n  constructor(private dialogService: NbDialogService) {\n\n  }\n\n  ngOnInit() {\n    this.paginateDataArray.push([]);\n  }\n\n  public pushData(successData) {\n    this.checkSizePage(true);\n    this.pages.totalRows++;\n    this.paginateDataArray[this.pages.numPages.length - 1].push(successData);\n    this.setPage(this.pages.numPages.length - 1);\n    // this.dataArray.push(successData);\n    this.backUpData.push(successData);\n    this.onCreate = false;\n    this.newData = {};\n    // this.paginate();\n  }\n\n  public putEdit(j: number) {\n    if (!this.update) {\n      this.inUpdate[j] = JSON.parse(JSON.stringify(this.dataArray[this.getIndexArray(j)]));\n    } else {\n      this.buttonClick.emit(j);\n    }\n    // old form to clone an object but there was and issue because in object as property din't clone it\n    // this.inUpdate[j] = {...this.dataArray[this.getIndexArray(j)]};\n  }\n\n  public updateData(updatedData) {\n    const index = this.getIndexArray(updatedData.id);\n    this.inUpdate[updatedData.id] = undefined;\n    this.dataArray[index] = updatedData;\n    this.backUpData[this.getIndexBackUp(updatedData.id)] = updatedData;\n    this.pages.totalRows++;\n  }\n\n  deleteData(deletedData) {\n    this.dataArray.splice(this.getIndexArray(deletedData.id), 1);\n    this.backUpData.splice(this.getIndexBackUp(deletedData.id), 1);\n    this.inUpdate[deletedData.id] = undefined;\n    this.checkSizePage(false);\n    this.pages.totalRows--;\n  }\n\n  sortColumn(column = null, isrefresh = false) {\n    if (!isrefresh) {\n      this.columnSorted.column = column.name;\n      this.columnSorted.mode = this.columnSorted.mode === 'arrow-up' ? 'arrow-down' : 'arrow-up';\n    }\n    const changeDirection = this.columnSorted.mode === 'arrow-up' ? -1 : 1;\n\n    this.paginateDataArray.forEach((arrayData, index) => {\n      if (index !== this.pages.selected) {\n        this.dataArray = this.dataArray.concat(arrayData);\n      }\n    });\n    this.dataArray.sort((a, b) => {\n      if (isNaN(a[this.columnSorted.column])) {\n        if (a[this.columnSorted.column].toUpperCase() > b[this.columnSorted.column].toUpperCase()) {\n          return -1 * changeDirection;\n        }\n        if (a[this.columnSorted.column].toUpperCase() < b[this.columnSorted.column].toUpperCase()) {\n          return changeDirection;\n        }\n        // a must be equal to b\n        return 0;\n      } else {\n        if (a[this.columnSorted.column] > b[this.columnSorted.column]) {\n          return -1 * changeDirection;\n        }\n        if (a[this.columnSorted.column] < b[this.columnSorted.column]) {\n          return changeDirection;\n        }\n        // a must be equal to b\n        return 0;\n      }\n    });\n    this.paginate();\n  }\n\n  filterColumn(column, value) {\n    value === '' ? delete this.columnsFilter[column.name] : this.columnsFilter[column.name] = value;\n    if (Object.keys(this.columnsFilter).length) {\n      let index = 0;\n      for (const key in this.columnsFilter) {\n        if (this.columnsFilter[key] !== '') {\n          if (index === 0) {\n            this.dataArray = this.backUpData.filter(data => (data[key] + '').includes(this.columnsFilter[key]));\n          } else {\n            this.dataArray = this.dataArray.filter(data => (data[key] + '').includes(this.columnsFilter[key]));\n          }\n          index++;\n        }\n      }\n    } else {\n      this.dataArray = this.backUpData.filter(data => true);\n    }\n    if (this.columnSorted.column) {\n      this.sortColumn(null, true);\n    }\n    this.pages.selected = 0;\n    this.paginate();\n  }\n\n  getIndexBackUp(id: number) {\n    return this.backUpData.findIndex(data => data.id === id);\n  }\n\n  getIndexArray(id: number) {\n    return this.dataArray.findIndex(data => data.id === id);\n  }\n\n  public paginate(newPagination = false) {\n    if (this.pages.rowPerPage >= 5 && this.pages.rowPerPage) {\n      if (newPagination) {\n        this.paginateDataArray.forEach((arrayData, index) => {\n          if (index !== this.pages.selected) {\n            this.dataArray = this.dataArray.concat(arrayData);\n          }\n        });\n      }\n      this.paginateDataArray = [];\n      if (this.pages.rowPerPage) {\n        this.pages.numPages = [];\n        for (let i = 0; i < Math.ceil(this.dataArray.length / this.pages.rowPerPage); i++) {\n          this.pages.numPages.push(i);\n        }\n        this.pages.numPages.forEach(i => {\n          if (i === 0) {\n            this.paginateDataArray.push(this.dataArray.slice(i, this.pages.rowPerPage));\n          } else {\n            this.paginateDataArray.push(this.dataArray.slice(i * this.pages.rowPerPage, (1 + i) * this.pages.rowPerPage));\n          }\n        });\n        this.setPage();\n      }\n    }\n  }\n\n  public setPage(page = 0) {\n\n    this.pages.selected = page;\n    this.dataArray = this.paginateDataArray[page];\n  }\n\n  public checkSizePage(push: boolean) {\n    let lastPage = this.pages.numPages.length - 1;\n    if (lastPage === -1) {\n      this.pages.numPages.push(0);\n      this.paginateDataArray.push([]);\n      lastPage = 0;\n    }\n    if (push) {\n      if (this.paginateDataArray[lastPage].length === this.pages.rowPerPage) {\n        this.pages.numPages.push(lastPage + 1);\n        this.paginateDataArray.push([]);\n      }\n    } else {\n      if (!this.paginateDataArray[lastPage].length) {\n        this.pages.numPages.pop();\n        this.paginateDataArray.pop();\n        this.setPage(lastPage - 1);\n      }\n    }\n  }\n\n  public setImageChange(event, column: string, i?: number) {\n    const reader = new FileReader();\n    const [file] = event.target.files;\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      if (i) {\n        this.inUpdate[i][column] = reader.result;\n\n      } else {\n        this.newData[column] = reader.result;\n\n      }\n    };\n  }\n\n  public onClickImage(imageSrc: string, name: string) {\n    this.dialogService.open(DialogComponent, {\n      context: {\n        title: name,\n        isImage: true,\n        content: imageSrc\n      }\n    });\n  }\n\n  public isGeneric(columntype): boolean {\n    return this.genericTypes.includes(columntype);\n  }\n\n  public getLists() {\n    if (!this.islists) {\n      this.getList.emit();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableComponent } from './data-table.component';\nimport {\n  NbInputModule,\n  NbIconModule,\n  NbButtonModule,\n  NbCardModule,\n  NbActionsModule,\n  NbAlertModule,\n  NbSelectModule,\n  NbToggleModule\n} from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [DataTableComponent],\n  imports: [\n    CommonModule,\n    NbIconModule,\n    NbCardModule,\n    FormsModule,\n    NbInputModule,\n    NbButtonModule,\n    NbActionsModule,\n    NbAlertModule,\n    NbSelectModule,\n    NbToggleModule\n  ],\n  exports:[DataTableComponent]\n})\nexport class DataTableModule { }\n"],"sourceRoot":"webpack:///","file":"default~agentes-agentes-module~clientes-clientes-module~compras-compras-module~productos-productos-module-es5.js"}