{"version":3,"sources":["./src/app/pages/clientes/clientes.component.html","./src/app/pages/clientes/clientes.component.scss","./src/app/pages/clientes/clientes.component.ts","./src/app/pages/clientes/clientes.module.ts","./src/app/services/clientes.service.ts"],"names":[],"mappings":"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","file":"clientes-clientes-module-es2015.js","sourcesContent":["export default \"<nb-alert status=\\\"success\\\" *ngIf=\\\"messageSuccess\\\" closable (close)=\\\"messageSuccess=''\\\">\\n    {{messageSuccess}}\\n</nb-alert>\\n\\n<nb-alert status=\\\"danger\\\" *ngFor=\\\"let errorsInput of errorsPerInput; let i = index\\\" closable\\n    (close)=\\\"errorsPerInput.splice(i,1)\\\">\\n    <div *ngFor=\\\"let error of errorsInput\\\">\\n        - {{error}}\\n    </div>\\n</nb-alert>\\n\\n<nb-card>\\n    <nb-card-header>CLIENTES</nb-card-header>\\n    <nb-card-body>\\n        <app-data-table [dataArrayInput]=\\\"clientes |async\\\" [tableStructure]=\\\"tableStructure\\\" #dataTable (create)=\\\"create($event,dataTable)\\\" (update)=\\\"update($event,dataTable)\\\" (delete)=\\\"delete($event,dataTable)\\\"></app-data-table>\\n    </nb-card-body>\\n</nb-card>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NsaWVudGVzL2NsaWVudGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ClientesService } from '../../services/clientes.service';\nimport { Cliente } from '../../models/cliente';\nimport { TableStructure } from 'src/app/own/data-table/tableStructure';\nimport { Observable } from 'rxjs';\nimport { NbDialogService } from '@nebular/theme';\nimport { DialogComponent } from 'src/app/own/dialog/dialog.component';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.scss']\n})\nexport class ClientesComponent implements OnInit {\n\n  public tableStructure: TableStructure = {\n    columns: [\n      { title: \"ID\", name: \"id\", editable: false, type: \"number\", filter: false },\n      { title: \"Nombre\", name: \"nombre\", editable: true, type: \"text\", filter: true },\n      { title: \"Teléfono\", name: \"telefono\", editable: true, type: \"number\", filter: true },\n      { title: \"Correo\", name: \"correo\", editable: true, type: \"text\", filter: true },\n      { title: \"Dirección\", name: \"direccion\", editable: true, type: \"textarea\", filter: true },\n    ],\n    buttons: {\n      create: true,\n      delete: true,\n      update: true\n    }\n  };\n  public clientes: Observable<Cliente[]>;\n  public errorsPerInput = [];\n  public messageSuccess = \"\";\n\n  constructor(private clienteService: ClientesService, private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    this.clientes = this.clienteService.getClientes();\n  }\n\n  public create(newData, dataTable) {\n    this.reset();\n    dataTable.charginData++;\n    this.clienteService.createCliente(newData)\n      .subscribe(clienteResponse => {\n        dataTable.charginData--;\n        this.messageSuccess = \"Cliente creado exitosamente\";\n        dataTable.pushData(clienteResponse);\n      }, error => this.displayErrors(error));\n  }\n  public update(updateData, dataTable) {\n    this.reset();\n    dataTable.charginData++;\n    this.clienteService.updateCliente(updateData)\n      .subscribe(clienteResponse => {\n        dataTable.charginData--;\n        dataTable.updateData(clienteResponse);\n        this.messageSuccess = \"Cliente actualizado correctamente\";\n      }, error => this.displayErrors(error));\n  }\n  public delete(deleteData, dataTable) {\n    this.dialogService.open(DialogComponent, {\n      context: {\n        title: '¡Cuidado!',\n        content: `Si elimina este registro, se perderá el historial de movimientos relacionados al registro de ${deleteData.nombre.toUpperCase()}. ¿Desea continuar?`\n      },\n    }).onClose.subscribe(response => {\n      if (response) {\n        this.reset();\n        dataTable.charginData++;\n        this.clienteService.deleteCliente(deleteData).subscribe(response => {\n          dataTable.charginData--;\n          this.messageSuccess = \"Cliente eliminado correctamente\"\n          dataTable.deleteData(response);\n        }, error => this.displayErrors(error));\n      }\n    });\n  }\n  private reset() {\n    this.errorsPerInput = [];\n    this.messageSuccess = \"\";\n    setTimeout(() => {\n      this.errorsPerInput = [];\n      this.messageSuccess = \"\";\n    }, 10000);\n  }\n  private displayErrors(error) {\n    \n    for (const key in error.error.errors) {\n      this.errorsPerInput.push(error.error.errors[key]);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientesComponent } from './clientes.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NbCardModule, NbAlertModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { DataTableModule } from 'src/app/own/data-table/data-table.module';\n\nconst routes: Routes = [\n  { path: '', component: ClientesComponent }\n];\n\n\n@NgModule({\n  declarations: [ClientesComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    DataTableModule,\n    //Nebular's components\n    NbCardModule,\n    NbEvaIconsModule,\n    NbAlertModule,\n  ],\n  exports: [RouterModule]\n})\nexport class ClientesModule { }\n","import {Injectable} from '@angular/core';\nimport {Cliente} from '../models/cliente';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getClientes(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>('http://api.vidamarinapuebla.com/api/clientes');\n  }\n\n  public updateCliente(cliente: Cliente): Observable<Cliente> {\n    return this.http.put<Cliente>('http://api.vidamarinapuebla.com/api/clientes/' + cliente.id, cliente);\n  }\n\n  public createCliente(cliente: Cliente): Observable<Cliente> {\n    return this.http.post<Cliente>('http://api.vidamarinapuebla.com/api/clientes', cliente);\n  }\n\n  public deleteCliente(cliente: Cliente): Observable<Cliente> {\n    return this.http.delete<Cliente>('http://api.vidamarinapuebla.com/api/clientes/' + cliente.id);\n  }\n}\n"],"sourceRoot":"webpack:///"}