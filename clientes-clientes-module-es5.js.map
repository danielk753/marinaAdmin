{"version":3,"sources":["src/app/pages/clientes/clientes.component.html","src/app/pages/clientes/clientes.component.scss","src/app/pages/clientes/clientes.component.ts","src/app/pages/clientes/clientes.module.ts","src/app/services/clientes.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<nb-alert status=\\\"success\\\" *ngIf=\\\"messageSuccess\\\" closable (close)=\\\"messageSuccess=''\\\">\\n    {{messageSuccess}}\\n</nb-alert>\\n\\n<nb-alert status=\\\"danger\\\" *ngFor=\\\"let errorsInput of errorsPerInput; let i = index\\\" closable\\n    (close)=\\\"errorsPerInput.splice(i,1)\\\">\\n    <div *ngFor=\\\"let error of errorsInput\\\">\\n        - {{error}}\\n    </div>\\n</nb-alert>\\n\\n<nb-card>\\n    <nb-card-header>CLIENTES</nb-card-header>\\n    <nb-card-body>\\n        <app-data-table [dataArrayInput]=\\\"clientes |async\\\" [tableStructure]=\\\"tableStructure\\\" #dataTable (create)=\\\"create($event,dataTable)\\\" (update)=\\\"update($event,dataTable)\\\" (delete)=\\\"delete($event,dataTable)\\\"></app-data-table>\\n    </nb-card-body>\\n</nb-card>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NsaWVudGVzL2NsaWVudGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ClientesService } from '../../services/clientes.service';\nimport { Cliente } from '../../models/cliente';\nimport { TableStructure } from 'src/app/own/data-table/tableStructure';\nimport { Observable } from 'rxjs';\nimport { NbDialogService } from '@nebular/theme';\nimport { DialogComponent } from 'src/app/own/dialog/dialog.component';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.scss']\n})\nexport class ClientesComponent implements OnInit {\n\n  public tableStructure: TableStructure = {\n    columns: [\n      { title: \"ID\", name: \"id\", editable: false, type: \"number\", filter: false },\n      { title: \"Nombre\", name: \"nombre\", editable: true, type: \"text\", filter: true },\n      { title: \"Teléfono\", name: \"telefono\", editable: true, type: \"number\", filter: true },\n      { title: \"Correo\", name: \"correo\", editable: true, type: \"text\", filter: true },\n      { title: \"Dirección\", name: \"direccion\", editable: true, type: \"textarea\", filter: true },\n    ],\n    buttons: {\n      create: true,\n      delete: true,\n      update: true\n    }\n  };\n  public clientes: Observable<Cliente[]>;\n  public errorsPerInput = [];\n  public messageSuccess = \"\";\n\n  constructor(private clienteService: ClientesService, private dialogService: NbDialogService) { }\n\n  ngOnInit() {\n    this.clientes = this.clienteService.getClientes();\n  }\n\n  public create(newData, dataTable) {\n    this.reset();\n    dataTable.charginData++;\n    this.clienteService.createCliente(newData)\n      .subscribe(clienteResponse => {\n        dataTable.charginData--;\n        this.messageSuccess = \"Cliente creado exitosamente\";\n        dataTable.pushData(clienteResponse);\n      }, error => this.displayErrors(error));\n  }\n  public update(updateData, dataTable) {\n    this.reset();\n    dataTable.charginData++;\n    this.clienteService.updateCliente(updateData)\n      .subscribe(clienteResponse => {\n        dataTable.charginData--;\n        dataTable.updateData(clienteResponse);\n        this.messageSuccess = \"Cliente actualizado correctamente\";\n      }, error => this.displayErrors(error));\n  }\n  public delete(deleteData, dataTable) {\n    this.dialogService.open(DialogComponent, {\n      context: {\n        title: '¡Cuidado!',\n        content: `Si elimina este registro, se perderá el historial de movimientos relacionados al registro de ${deleteData.nombre.toUpperCase()}. ¿Desea continuar?`\n      },\n    }).onClose.subscribe(response => {\n      if (response) {\n        this.reset();\n        dataTable.charginData++;\n        this.clienteService.deleteCliente(deleteData).subscribe(response => {\n          dataTable.charginData--;\n          this.messageSuccess = \"Cliente eliminado correctamente\"\n          dataTable.deleteData(response);\n        }, error => this.displayErrors(error));\n      }\n    });\n  }\n  private reset() {\n    this.errorsPerInput = [];\n    this.messageSuccess = \"\";\n    setTimeout(() => {\n      this.errorsPerInput = [];\n      this.messageSuccess = \"\";\n    }, 10000);\n  }\n  private displayErrors(error) {\n    \n    for (const key in error.error.errors) {\n      this.errorsPerInput.push(error.error.errors[key]);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientesComponent } from './clientes.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NbCardModule, NbAlertModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { DataTableModule } from 'src/app/own/data-table/data-table.module';\n\nconst routes: Routes = [\n  { path: '', component: ClientesComponent }\n];\n\n\n@NgModule({\n  declarations: [ClientesComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    DataTableModule,\n    //Nebular's components\n    NbCardModule,\n    NbEvaIconsModule,\n    NbAlertModule,\n  ],\n  exports: [RouterModule]\n})\nexport class ClientesModule { }\n","import {Injectable} from '@angular/core';\nimport {Cliente} from '../models/cliente';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getClientes(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>('http://api.vidamarinapuebla.com/api/clientes');\n  }\n\n  public updateCliente(cliente: Cliente): Observable<Cliente> {\n    return this.http.put<Cliente>('http://api.vidamarinapuebla.com/api/clientes/' + cliente.id, cliente);\n  }\n\n  public createCliente(cliente: Cliente): Observable<Cliente> {\n    return this.http.post<Cliente>('http://api.vidamarinapuebla.com/api/clientes', cliente);\n  }\n\n  public deleteCliente(cliente: Cliente): Observable<Cliente> {\n    return this.http.delete<Cliente>('http://api.vidamarinapuebla.com/api/clientes/' + cliente.id);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"clientes-clientes-module-es5.js"}